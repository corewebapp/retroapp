@model retrowebcore.Handlers.Boards.BoardListResponse 
@{
    ViewData["Title"] = "Board List";
}

<div class="row">
    <div class="col-md-6 col-sm-12">
        <input class="rounded" type="text" id="squadName" placeholder="Squad name" value="" required />
        <input class="rounded" type="text" id="sprintName" placeholder="Sprint name" value="" required />
        <button class="primary" type="button" id="addNewBoard">
            Add new board
        </button>
        <div class="spinner tertiary hidden" id="sendButtonSpinner"></div>
    </div>
    <div class="col-md-6" id="searchContainer">
        <span class="icon-search"></span>
        <input class="rounded" type="text" id="searchBoard" placeholder="search board" value=""  />
        <a href="/board/search?q=" class="hidden" id="searchHref">search</a>
    </div>
</div>
<hr />

<div class="row" id="boardContainer">
    @{
        foreach (var each in Model.Data)
        {
            <div class="card" id="container-@each.Slug">
                <h5 class="card-title">@each.Name</h5>
                <p class="card-text">
                    @each.Description
                </p>
                <div class="row">
                    <a href="/board/view/@each.Slug" class="button small primary">
                        <span class="icon-link inverse"></span> Go to board
                    </a>
                    <a href="/board/edit/@each.Slug" class="button small tertiary">
                        <span class="icon-edit inverse"></span> Edit
                    </a>

                    <button class="small button inverse archive-action" type="button" id="@each.Slug">
                        Archive
                    </button>
                    <span class="spinner tertiary hidden archive-spinner"
                          id="spinner-@each.Slug"
                          role="status"
                          aria-hidden="true">
                    </span>
                </div>
            </div>
        }
    }
</div>
<div>
    
</div>

@section Scripts {
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script>
        var @nameof(retrowebcore.Hubs.BoardHub.hubAddNewBoard) = '@retrowebcore.Hubs.BoardHub.hubAddNewBoard';
        var @nameof(retrowebcore.Hubs.BoardHub.hubNewBoardEvent) = '@retrowebcore.Hubs.BoardHub.hubNewBoardEvent';

        var @nameof(retrowebcore.Hubs.BoardHub.hubArchiveBoard) = '@retrowebcore.Hubs.BoardHub.hubArchiveBoard';
        var @nameof(retrowebcore.Hubs.BoardHub.hubArchiveEvent) = '@retrowebcore.Hubs.BoardHub.hubArchiveEvent';

        const SQUAD_TEMPLATE = '<[[SQUAD_NAME]]>';
        const SPRINT_TEMPLATE = '<[[SPRINT_NAME]]>';
        const SLUG_TEMPLATE = '<[[SLUG]]>';

        var BOARD_TEMPLATE = `
            <div class="card" id="container-${SLUG_TEMPLATE}">
                <h5 class="card-title">${SQUAD_TEMPLATE}</h5>
                <p class="card-text">
                    ${SPRINT_TEMPLATE}
                </p>
                <div class="row">
                    <a href="/board/view/${SLUG_TEMPLATE}" class="button small primary">
                        <span class="icon-link inverse"></span> Go to board
                    </a>
                    <a href="/board/edit/${SLUG_TEMPLATE}" class="button small tertiary">
                        <span class="icon-edit inverse"></span> Edit
                    </a>
                    <button class="small button inverse archive-action" type="button" id="${SLUG_TEMPLATE}">
                        Archive
                    </button>
                    <span class="spinner tertiary hidden archive-spinner"
                          id="spinner-${SLUG_TEMPLATE}"
                          role="status"
                          aria-hidden="true">
                    </span>
                </div>
            </div>
        `;

        function buildNewBoard(data) {
            return BOARD_TEMPLATE
                .replace(SQUAD_TEMPLATE, data.squad)
                .replace(SPRINT_TEMPLATE, data.sprint)
                .replace(SLUG_TEMPLATE, data.slug)
                .replace(SLUG_TEMPLATE, data.slug)
                .replace(SLUG_TEMPLATE, data.slug)
                .replace(SLUG_TEMPLATE, data.slug)
                .replace(SLUG_TEMPLATE, data.slug);
        }

        var searchNode = document.getElementById('searchBoard');
        searchNode.addEventListener('keyup', ({ key }) => {
            if (key === "Enter") {
                addSpinner(document.getElementById('searchContainer'));
                var link = document.getElementById("searchHref").href;
                openHrefWithPortal(`${link}${searchNode.value}`);
            }
        })
    </script>
    <script src="~/js/board-hub.js"></script>
}
